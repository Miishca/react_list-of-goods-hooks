{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","GoodsList","visibleGoods","map","good","App","useState","Default","sortField","setSortField","reverseField","setIsReversedField","goods","preparedGoods","sort","good1","good2","Alphabetically","localeCompare","Length","length","reverse","getPreparedGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,gBAAAA,E,YAAAA,M,KAyCE,IAAME,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACxC,6BACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,SAKFC,EAAgB,WAC3B,MAAkCC,mBAAmBP,EAASQ,SAA9D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2CH,oBAAS,GAApD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMT,EA3CR,SACEU,EADF,GAMG,IAJCJ,EAIF,EAJEA,UAAWE,EAIb,EAJaA,aAKPG,EAAa,YAAOD,GAqB1B,OAnBIJ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKT,EAASkB,eACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,GACFG,EAAcQ,UAGTR,EAecS,CAAiBtB,EACpC,CAAEQ,YAAWE,iBAOf,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAaV,EAASkB,iBACrCQ,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYlB,IAAcT,EAASkB,iBALzC,iCAWA,wBACEO,QAAS,kBAAMf,EAAaV,EAASoB,SACrCM,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,WAAYlB,IAAcT,EAASoB,SALzC,4BAWA,wBACEK,QAAS,kBAAMb,GAAoBD,IACnCe,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,YAAahB,IALnB,sBAWEF,GAAaE,IACb,wBACEc,QA3CO,WACff,EAAaV,EAASQ,SACtBI,GAAmB,IA0CXc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAWrB,aAAcA,QC3H/ByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ff6ec916.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabetically = 'Alphabetically',\n  Length = 'Length',\n  Default = '',\n}\n\ntype Props = {\n  visibleGoods: string[],\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, reverseField }: {\n    sortField: SortType,\n    reverseField: boolean\n  },\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.Alphabetically:\n          return good1.localeCompare(good2);\n\n        case SortType.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const GoodsList: React.FC<Props> = ({ visibleGoods }) => (\n  <ul>\n    {visibleGoods.map(good => (\n      <li key={good} data-cy=\"Good\">{good}</li>\n    ))}\n  </ul>\n);\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType>(SortType.Default);\n  const [reverseField, setIsReversedField] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseField });\n\n  const resetAll = () => {\n    setSortField(SortType.Default);\n    setIsReversedField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SortType.Alphabetically)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortField !== SortType.Alphabetically,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SortType.Length)}\n          type=\"button\"\n          className={cn('button', 'is-success',\n            {\n              'is-light': sortField !== SortType.Length,\n            })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversedField(!reverseField)}\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            {\n              'is-light': !reverseField,\n            })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            onClick={resetAll}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList visibleGoods={visibleGoods} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}